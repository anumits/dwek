#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

# $Id$
require 'dwek/lexer'
require 'dwek/variable_registry'

module Dwek
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 49)
  attr_reader :mapper_list

  def initialize(verbose = false)
    @verbose = verbose
  end

  def parse(string)
    @variable_registry = VariableRegistry.new
    @mapper_list = MapperList.new

    @lexer = Lexer.new
    @lexer.parse(string)

    do_parse
  end

  def next_token
    @lexer.next_token
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     7,     7,    22,     8,     8,    32,    33,    34,    39,    22,
    12,    19,    23,    31,    24,    26,     9,     9,    19,    23,
    43,    24,    26,    37,    22,    32,    33,    34,    10,    22,
    32,    33,    34,    19,    23,    22,    24,    26,    19,    23,
    22,    24,    26,    28,    19,    23,    22,    24,    26,    19,
    23,    22,    24,    26,    22,    22,    23,    46,    24,    22,
    32,    23,    15,    24,    23,    23,    24,    24,    14,    23,
    50,    24,    32,    33,    44,    45,    16,    17,    51,    52,
    50,    13 ]

racc_action_check = [
     0,     2,    52,     0,     2,    35,    35,    35,    31,    26,
     3,    52,    52,    18,    52,    52,     0,     2,    26,    26,
    35,    26,    26,    26,    45,    30,    30,    30,     1,     8,
    21,    21,    21,    45,    45,     9,    45,    45,     8,     8,
    16,     8,     8,    10,     9,     9,    32,     9,     9,    16,
    16,    23,    16,    16,    33,    34,    32,    39,    32,    17,
    41,    23,     6,    23,    33,    34,    33,    34,     5,    17,
    46,    17,    42,    42,    36,    36,     7,     7,    49,    50,
    51,     4 ]

racc_action_pointer = [
    -6,    28,    -5,     5,    76,    63,    57,    69,    23,    29,
    43,   nil,   nil,   nil,   nil,   nil,    34,    53,     3,   nil,
   nil,    28,   nil,    45,   nil,   nil,     3,   nil,   nil,   nil,
    23,    -3,    40,    48,    49,     3,    54,   nil,   nil,    45,
   nil,    58,    70,   nil,   nil,    18,    56,   nil,   nil,    65,
    72,    66,    -4,   nil,   nil ]

racc_action_default = [
   -29,   -29,    -1,   -29,   -29,   -29,   -29,   -29,   -29,   -29,
   -29,    -2,    -3,    -4,    -5,    -6,   -29,   -29,   -29,   -14,
   -15,   -16,   -17,   -29,   -22,   -23,   -29,   -28,    55,    -7,
    -8,   -29,   -29,   -29,   -29,   -29,   -29,   -25,   -26,    -9,
   -18,   -19,   -20,   -21,   -24,   -29,   -29,   -27,   -10,   -11,
   -29,   -29,   -29,   -12,   -13 ]

racc_goto_table = [
    18,    27,    48,     1,    30,    11,    36,    53,    29,   nil,
    35,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    40,
    41,    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,   nil,   nil,
   nil,   nil,   nil,   nil,    54 ]

racc_goto_check = [
     7,     7,     9,     1,     8,     1,    13,     9,     7,   nil,
     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,     8,
     8,     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,
   nil,   nil,   nil,   nil,     7 ]

racc_goto_pointer = [
   nil,     3,   nil,   nil,   nil,   nil,   nil,    -8,   -13,   -44,
   nil,   nil,   nil,   -20 ]

racc_goto_default = [
   nil,   nil,     2,     3,     4,     5,     6,   nil,    21,   nil,
    49,    20,    25,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 24, :_reduce_none,
  2, 24, :_reduce_none,
  2, 25, :_reduce_none,
  2, 25, :_reduce_none,
  2, 25, :_reduce_none,
  2, 25, :_reduce_none,
  3, 26, :_reduce_7,
  3, 27, :_reduce_8,
  4, 28, :_reduce_9,
  6, 28, :_reduce_10,
  1, 32, :_reduce_none,
  3, 32, :_reduce_12,
  3, 33, :_reduce_13,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 35, :_reduce_17,
  3, 31, :_reduce_18,
  3, 31, :_reduce_19,
  3, 31, :_reduce_20,
  3, 31, :_reduce_21,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  3, 34, :_reduce_24,
  2, 34, :_reduce_25,
  1, 36, :_reduce_26,
  3, 36, :_reduce_27,
  2, 29, :_reduce_28 ]

racc_reduce_n = 29

racc_shift_n = 55

racc_token_table = {
  false => 0,
  :error => 1,
  :OPERATOR_LEVEL3 => 2,
  :OPERATOR_LEVEL2 => 3,
  :OPERATOR_LEVEL1 => 4,
  ";" => 5,
  :VARIABLE => 6,
  "=" => 7,
  :OPERATOR_ASSIGNMENT => 8,
  "MAP" => 9,
  "AS" => 10,
  :MAPPER => 11,
  "WITH" => 12,
  "AND" => 13,
  :OPTION => 14,
  :STRING => 15,
  "(" => 16,
  ")" => 17,
  :NUMBER => 18,
  "[" => 19,
  "]" => 20,
  "," => 21,
  "PRINT" => 22 }

racc_nt_base = 23

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "OPERATOR_LEVEL3",
  "OPERATOR_LEVEL2",
  "OPERATOR_LEVEL1",
  "\";\"",
  "VARIABLE",
  "\"=\"",
  "OPERATOR_ASSIGNMENT",
  "\"MAP\"",
  "\"AS\"",
  "MAPPER",
  "\"WITH\"",
  "\"AND\"",
  "OPTION",
  "STRING",
  "\"(\"",
  "\")\"",
  "NUMBER",
  "\"[\"",
  "\"]\"",
  "\",\"",
  "\"PRINT\"",
  "$start",
  "configuration",
  "expression",
  "assignment",
  "assignment_exp",
  "mapping",
  "print",
  "object",
  "exp",
  "options_list",
  "option",
  "array",
  "variable",
  "array_contents" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_7(val, _values)
     @variable_registry.set(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_8(val, _values)
     @variable_registry.assign_set(val[0], val[1], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_9(val, _values)
     @mapper_list.add_mapper(val[1].to_sym, val[3].to_sym) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_10(val, _values)
     @mapper_list.add_mapper(val[1].to_sym, val[3].to_sym, val[5]) 
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_12(val, _values)
     val[2].merge(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_13(val, _values)
     { val[0].to_sym => val[2] } 
  end
.,.,

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_17(val, _values)
     @variable_registry.get(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_18(val, _values)
     val[0].send(val[1].to_sym, val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_19(val, _values)
     val[0].send(val[1].to_sym, val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 29)
  def _reduce_20(val, _values)
     val[0].send(val[1].to_sym, val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_21(val, _values)
     val[1] 
  end
.,.,

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_24(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_25(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_26(val, _values)
     [val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_27(val, _values)
     val[0] + [val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_28(val, _values)
     puts val[1] 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

  end   # class Parser
  end   # module Dwek
