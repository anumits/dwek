#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

# $Id$
require 'dwek/lexer'
require 'dwek/variable_registry'

module Dwek
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 46)
  attr_reader :mapper_list

  def initialize(verbose = false)
    @verbose = verbose
  end

  def parse(string)
    @variable_registry = VariableRegistry.new
    @mapper_list = MapperList.new

    @lexer = Lexer.new
    @lexer.parse(string)

    do_parse
  end

  def next_token
    @lexer.next_token
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     7,     7,    22,     8,     8,    32,    33,    16,    17,    32,
    33,    22,    23,    13,    24,    38,     9,     9,    22,    41,
    19,    23,    15,    24,    26,    36,    22,    19,    23,    28,
    24,    26,    22,    32,    33,    19,    23,    22,    24,    26,
    12,    19,    23,    22,    24,    26,    19,    23,    22,    24,
    26,    22,    19,    23,    22,    24,    26,    14,    23,    44,
    24,    23,    32,    24,    23,    10,    24,    42,    43,    48,
    49,    50,    48,    31 ]

racc_action_check = [
     0,     2,    23,     0,     2,    34,    34,     7,     7,    21,
    21,    26,    23,     4,    23,    31,     0,     2,    43,    34,
    26,    26,     6,    26,    26,    26,     8,    43,    43,    10,
    43,    43,    16,    30,    30,     8,     8,     9,     8,     8,
     3,    16,    16,    50,    16,    16,     9,     9,    17,     9,
     9,    32,    50,    50,    33,    50,    50,     5,    17,    38,
    17,    32,    40,    32,    33,     1,    33,    35,    35,    44,
    47,    48,    49,    18 ]

racc_action_pointer = [
    -5,    65,    -4,    36,     9,    53,    18,     1,    21,    32,
    29,   nil,   nil,   nil,   nil,   nil,    27,    43,    64,   nil,
   nil,     7,   nil,    -3,   nil,   nil,     6,   nil,   nil,   nil,
    31,     5,    46,    49,     3,    48,   nil,   nil,    48,   nil,
    60,   nil,   nil,    13,    56,   nil,   nil,    58,    65,    59,
    38,   nil,   nil ]

racc_action_default = [
   -28,   -28,    -1,   -28,   -28,   -28,   -28,   -28,   -28,   -28,
   -28,    -2,    -3,    -4,    -5,    -6,   -28,   -28,   -28,   -14,
   -15,   -16,   -17,   -28,   -21,   -22,   -28,   -27,    53,    -7,
    -8,   -28,   -28,   -28,   -28,   -28,   -24,   -25,    -9,   -18,
   -19,   -20,   -23,   -28,   -28,   -26,   -10,   -11,   -28,   -28,
   -28,   -12,   -13 ]

racc_goto_table = [
    18,    27,    46,     1,    30,    11,    35,    51,    29,   nil,
    34,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    39,
    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    45,   nil,   nil,   nil,   nil,
   nil,   nil,    52 ]

racc_goto_check = [
     7,     7,     9,     1,     8,     1,    13,     9,     7,   nil,
     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,     8,
     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,     7 ]

racc_goto_pointer = [
   nil,     3,   nil,   nil,   nil,   nil,   nil,    -8,   -13,   -42,
   nil,   nil,   nil,   -20 ]

racc_goto_default = [
   nil,   nil,     2,     3,     4,     5,     6,   nil,    21,   nil,
    47,    20,    25,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 23, :_reduce_none,
  2, 23, :_reduce_none,
  2, 24, :_reduce_none,
  2, 24, :_reduce_none,
  2, 24, :_reduce_none,
  2, 24, :_reduce_none,
  3, 25, :_reduce_7,
  3, 26, :_reduce_8,
  4, 27, :_reduce_9,
  6, 27, :_reduce_10,
  1, 31, :_reduce_none,
  3, 31, :_reduce_12,
  3, 32, :_reduce_13,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 34, :_reduce_17,
  3, 30, :_reduce_18,
  3, 30, :_reduce_19,
  3, 30, :_reduce_20,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  3, 33, :_reduce_23,
  2, 33, :_reduce_24,
  1, 35, :_reduce_25,
  3, 35, :_reduce_26,
  2, 28, :_reduce_27 ]

racc_reduce_n = 28

racc_shift_n = 53

racc_token_table = {
  false => 0,
  :error => 1,
  :OPERATOR_LEVEL2 => 2,
  :OPERATOR_LEVEL1 => 3,
  ";" => 4,
  :VARIABLE => 5,
  "=" => 6,
  :OPERATOR_ASSIGNMENT => 7,
  "MAP" => 8,
  "AS" => 9,
  :MAPPER => 10,
  "WITH" => 11,
  "AND" => 12,
  :OPTION => 13,
  :STRING => 14,
  "(" => 15,
  ")" => 16,
  :NUMBER => 17,
  "[" => 18,
  "]" => 19,
  "," => 20,
  "PRINT" => 21 }

racc_nt_base = 22

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "OPERATOR_LEVEL2",
  "OPERATOR_LEVEL1",
  "\";\"",
  "VARIABLE",
  "\"=\"",
  "OPERATOR_ASSIGNMENT",
  "\"MAP\"",
  "\"AS\"",
  "MAPPER",
  "\"WITH\"",
  "\"AND\"",
  "OPTION",
  "STRING",
  "\"(\"",
  "\")\"",
  "NUMBER",
  "\"[\"",
  "\"]\"",
  "\",\"",
  "\"PRINT\"",
  "$start",
  "configuration",
  "expression",
  "assignment",
  "assignment_exp",
  "mapping",
  "print",
  "object",
  "exp",
  "options_list",
  "option",
  "array",
  "variable",
  "array_contents" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

module_eval(<<'.,.,', 'parser.y', 13)
  def _reduce_7(val, _values)
     @variable_registry.set(val[0], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_8(val, _values)
     @variable_registry.assign_set(val[0], val[1], val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_9(val, _values)
     @mapper_list.add_mapper(val[1].to_sym, val[3].to_sym) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_10(val, _values)
     @mapper_list.add_mapper(val[1].to_sym, val[3].to_sym, val[5]) 
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_12(val, _values)
     val[2].merge(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_13(val, _values)
     { val[0].to_sym => val[2] } 
  end
.,.,

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_17(val, _values)
     @variable_registry.get(val[0]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_18(val, _values)
     val[0].send(val[1].to_sym, val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_19(val, _values)
     val[0].send(val[1].to_sym, val[2]) 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_20(val, _values)
     val[1] 
  end
.,.,

# reduce 21 omitted

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 31)
  def _reduce_23(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_24(val, _values)
     [] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_25(val, _values)
     [val[0]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_26(val, _values)
     val[0] + [val[2]] 
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_27(val, _values)
     puts val[1] 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

  end   # class Parser
  end   # module Dwek
